apiVersion: v1
kind: ConfigMap
metadata:
  name: properties-configmap
data:
  auth-service-deployment.properties: |
    server.port: 8080
    url.data.service: http://sql-data-service.default.svc.cluster.local:8080
    sys.token.issuer: Andoni
    sys.token.key: MySuperSecureEncriptedAndProtectedKey
    sys.token.duration: 3600000
  consumer-api-deployment.properties: |
    server.port: 8080
    url.mongo.service: http://mongo-data-service.default.svc.cluster.local:8080
    url.data.service: http://sql-data-service.default.svc.cluster.local:8080
  gateway-deployment.properties: |
    server.port: 8080
    url.auth.service: http://auth-service-service.default.svc.cluster.local:8080
    auth.path: /auth
    auth.name: auth-service
    url.validator.api: http://validator-api-service.default.svc.cluster.local:8080
    validator.path: /api/v1/validator
    validator.name: validator-api
    url.producer.api: http://producer-api-service.default.svc.cluster.local:8080
    producer.path: /api/v1/producer
    producer.name: producer-api
    url.consumer.api: http://consumer-api-service.default.svc.cluster.local:8080
    consumer.path: /api/v1/consumer
    consumer.name: consumer-api
    spring.cloud.loadbalancer.ribbon.enabled: false
    server.forward-headers-strategy: framework
    spring.cloud.gateway.routes[0].id: ${validator.name}
    spring.cloud.gateway.routes[0].uri: ${url.validator.api}
    spring.cloud.gateway.routes[0].predicates[0]: Path=${validator.path}/**
    spring.cloud.gateway.routes[0].filters[0]: AuthFilter=Validator
    spring.cloud.gateway.routes[1].id: ${consumer.name}
    spring.cloud.gateway.routes[1].uri: ${url.consumer.api}
    spring.cloud.gateway.routes[1].predicates[0]: Path=${consumer.path}/**
    spring.cloud.gateway.routes[2].id: ${producer.name}-public
    spring.cloud.gateway.routes[2].uri: ${url.producer.api}
    spring.cloud.gateway.routes[2].predicates[0]: Path=${producer.path}
    spring.cloud.gateway.routes[3].id: ${producer.name}-private
    spring.cloud.gateway.routes[3].uri: ${url.producer.api}
    spring.cloud.gateway.routes[3].predicates[0]: Path=${producer.path}/**
    spring.cloud.gateway.routes[3].filters[0]: AuthFilter=Producer
    spring.cloud.gateway.routes[4].id: ${auth.name}
    spring.cloud.gateway.routes[4].uri: ${url.auth.service}
    spring.cloud.gateway.routes[4].predicates[0]: Path=${auth.path}/**
  mongo-data-deployment.properties: |
    server.port: 8080
    spring.data.mongodb.uri: mongodb://root:password@mongo-service.default.svc.cluster.local:27017/admin
  process-service-deployment.properties: |
    server.port: 8080
    spring.rabbitmq.host: rabbitmq-service.default.svc.cluster.local
    spring.rabbitmq.port: 5672
    spring.rabbitmq.username: guest
    spring.rabbitmq.password: guest
    rabbitmq.routing.key.all: k.worker.*
    rabbitmq.queue.worker: q.worker
    rabbitmq.exchange.name: default
    url.data.service: http://sql-data-service.default.svc.cluster.local:8080
  producer-api-deployment.properties: |
    server.port: 8080
    url.data.service: http://sql-data-service.default.svc.cluster.local:8080
    url.mongo.service: http://mongo-data-service.default.svc.cluster.local:8080
  sql-data-deployment.properties: |
    server.port: 8080
    spring.jpa.hibernate.ddl-auto: update
    spring.jpa.defer-datasource-initialization :  true
    spring.jpa.show-sql: true
    spring.datasource.url: jdbc:mysql://mysql-service.default.svc.cluster.local:3306/db
    spring.datasource.username: root
    spring.datasource.password: password
    spring.datasource.driver-class-name: com.mysql.cj.jdbc.Driver
  validator-api-deployment.properties: |
    server.port: 8080
    url.data.service: http://sql-data-service.default.svc.cluster.local:8080
    url.process.service: http://process-service-service.default.svc.cluster.local:8080
  worker-deployment.properties: |
    server.port: 8080
    spring.rabbitmq.host: rabbitmq-service.default.svc.cluster.local
    spring.rabbitmq.port: 5672
    spring.rabbitmq.username: guest
    spring.rabbitmq.password: guest
    rabbitmq.queue.worker: q.worker
    rabbitmq.exchange.name: default
    url.process.service: http://process-service-service.default.svc.cluster.local:8080
  data-integrity-deployment.properties: |
    url.data.service: http://sql-data-service.default.svc.cluster.local:8080
    url.mongo.service: http://mongo-data-service.default.svc.cluster.local:8080
